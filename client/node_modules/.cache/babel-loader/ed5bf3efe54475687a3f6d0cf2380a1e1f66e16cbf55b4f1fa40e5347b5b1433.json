{"ast":null,"code":"var _jsxFileName = \"/workspaces/controle-estoque-relatorios-api/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport ReportModal from './components/ReportModal';\n\n// URL da nossa API que está rodando em localhost:3001\n// É crucial que o servidor da API esteja rodando para esta URL funcionar.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/api';\n\n// Configuração das colunas e títulos para cada tipo de relatório\nconst reportConfig = {\n  clientes: {\n    title: 'Relatório de Clientes',\n    endpoint: '/clientes',\n    columns: [{\n      key: 'id',\n      label: 'ID'\n    }, {\n      key: 'nome',\n      label: 'Nome'\n    }, {\n      key: 'cnpj',\n      label: 'CNPJ'\n    }, {\n      key: 'email',\n      label: 'Email'\n    }]\n  },\n  produtos: {\n    title: 'Relatório de Produtos',\n    endpoint: '/produtos',\n    columns: [{\n      key: 'id',\n      label: 'ID'\n    }, {\n      key: 'nome',\n      label: 'Nome'\n    }, {\n      key: 'quantidade',\n      label: 'Qntd.'\n    }, {\n      key: 'status',\n      label: 'Status'\n    }, {\n      key: 'preco',\n      label: 'Preço'\n    }]\n  },\n  pedidos: {\n    title: 'Relatório de Pedidos',\n    endpoint: '/pedidos',\n    columns: [{\n      key: 'id',\n      label: 'ID Pedido'\n    }, {\n      key: 'nomeCliente',\n      label: 'Cliente'\n    }, {\n      key: 'nomeProduto',\n      label: 'Produto'\n    }, {\n      key: 'quantidade',\n      label: 'Quantidade'\n    }]\n  }\n};\nfunction App() {\n  _s();\n  var _reportConfig$current, _reportConfig$current2;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [currentReport, setCurrentReport] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Esta função é chamada quando um item do menu é clicado no Sidebar\n  const handleMenuClick = async reportType => {\n    setIsLoading(true);\n    setError(null);\n    setReportData(null); // Limpa dados antigos\n    setIsModalOpen(true);\n    setCurrentReport(reportType);\n    try {\n      // Faz a requisição para a API\n      const response = await fetch(`${API_URL}${reportConfig[reportType].endpoint}`);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar dados da API. O servidor backend está rodando?');\n      }\n      const data = await response.json();\n      setReportData(data); // Armazena os dados recebidos no estado\n    } catch (err) {\n      setError(err.message);\n      setReportData([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para fechar o modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setReportData(null);\n    setCurrentReport(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onMenuClick: handleMenuClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sistema de Gerenciamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Clique em uma op\\xE7\\xE3o no menu lateral para gerar um relat\\xF3rio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ReportModal, {\n        title: ((_reportConfig$current = reportConfig[currentReport]) === null || _reportConfig$current === void 0 ? void 0 : _reportConfig$current.title) || 'Carregando...',\n        data: isLoading ? [] : reportData,\n        columns: ((_reportConfig$current2 = reportConfig[currentReport]) === null || _reportConfig$current2 === void 0 ? void 0 : _reportConfig$current2.columns) || [],\n        onClose: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RZH+7QPPRxuPDZj4WpsrMa2jw7Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","ReportModal","jsxDEV","_jsxDEV","API_URL","reportConfig","clientes","title","endpoint","columns","key","label","produtos","pedidos","App","_s","_reportConfig$current","_reportConfig$current2","isModalOpen","setIsModalOpen","reportData","setReportData","currentReport","setCurrentReport","isLoading","setIsLoading","error","setError","handleMenuClick","reportType","response","fetch","ok","Error","data","json","err","message","closeModal","className","children","onMenuClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/workspaces/controle-estoque-relatorios-api/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport ReportModal from './components/ReportModal';\n\n// URL da nossa API que está rodando em localhost:3001\n// É crucial que o servidor da API esteja rodando para esta URL funcionar.\nconst API_URL = 'http://localhost:3001/api';\n\n// Configuração das colunas e títulos para cada tipo de relatório\nconst reportConfig = {\n  clientes: {\n    title: 'Relatório de Clientes',\n    endpoint: '/clientes',\n    columns: [\n      { key: 'id', label: 'ID' },\n      { key: 'nome', label: 'Nome' },\n      { key: 'cnpj', label: 'CNPJ' },\n      { key: 'email', label: 'Email' },\n    ],\n  },\n  produtos: {\n    title: 'Relatório de Produtos',\n    endpoint: '/produtos',\n    columns: [\n      { key: 'id', label: 'ID' },\n      { key: 'nome', label: 'Nome' },\n      { key: 'quantidade', label: 'Qntd.' },\n      { key: 'status', label: 'Status' },\n      { key: 'preco', label: 'Preço' },\n    ],\n  },\n  pedidos: {\n      title: 'Relatório de Pedidos',\n      endpoint: '/pedidos',\n      columns: [\n          { key: 'id', label: 'ID Pedido' },\n          { key: 'nomeCliente', label: 'Cliente' },\n          { key: 'nomeProduto', label: 'Produto' },\n          { key: 'quantidade', label: 'Quantidade' },\n      ]\n  }\n};\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [currentReport, setCurrentReport] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Esta função é chamada quando um item do menu é clicado no Sidebar\n  const handleMenuClick = async (reportType) => {\n    setIsLoading(true);\n    setError(null);\n    setReportData(null); // Limpa dados antigos\n    setIsModalOpen(true);\n    setCurrentReport(reportType);\n\n    try {\n      // Faz a requisição para a API\n      const response = await fetch(`${API_URL}${reportConfig[reportType].endpoint}`);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar dados da API. O servidor backend está rodando?');\n      }\n      const data = await response.json();\n      setReportData(data); // Armazena os dados recebidos no estado\n    } catch (err) {\n      setError(err.message);\n      setReportData([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para fechar o modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setReportData(null);\n    setCurrentReport(null);\n    setError(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar onMenuClick={handleMenuClick} />\n      <main className=\"main-content\">\n        <h1>Sistema de Gerenciamento</h1>\n        <p>Clique em uma opção no menu lateral para gerar um relatório.</p>\n\n        {/* O modal só é exibido se isModalOpen for true */}\n        {isModalOpen && (\n          <ReportModal\n            title={reportConfig[currentReport]?.title || 'Carregando...'}\n            data={isLoading ? [] : reportData}\n            columns={reportConfig[currentReport]?.columns || []}\n            onClose={closeModal}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}